{"version":3,"sources":["webpack:///./src/data/projects.js","webpack:///./src/pages/projects.js"],"names":["projects","title","description","repo","demo","Projects","githubData","setGithubData","useState","isDark","useContext","ThemeContext","useEffect","async","promises","map","response","fetch","project","data","json","stars","stargazers_count","forks","forks_count","githubDataMap","Promise","all","reduce","acc","result","fetchGithubData","React","createElement","Layout","className","githubInfo","key","FontAwesomeIcon","icon","faStar","faUtensils","href","target","rel","faCode","faExternalLinkAlt","Fragment"],"mappings":"0IA6CeA,MA7CE,CACb,CACIC,MAAO,4BACPC,YAAa,YACbC,KAAM,6CAIV,CACIF,MAAO,qBACPC,YAAa,yCACbC,KAAM,sCAEV,CACIF,MAAO,cACPC,YAAa,2DACbC,KAAM,8BACNC,KAAM,iDAEV,CACIH,MAAO,mBACPC,YAAa,iBACbC,KAAM,8BACNC,KAAM,iDAEV,CACIH,MAAO,uBACPC,YAAa,iGACbC,KAAM,4CAGV,CACIF,MAAO,sBACPC,YAAa,wDACbC,KAAM,uCAGV,CACIF,MAAO,wBACPC,YAAa,+DACbC,KAAM,4C,gDC8BCE,UA9DEA,KACb,MAAM,EAACC,EAAW,EAACC,GAAiBC,mBAAS,KACvC,OAAEC,GAAWC,qBAAWC,KAsB9B,OApBAC,oBAAU,KACkBC,WACpB,MAAMC,EAAWd,EAASe,IAAIF,UAC1B,MAAMG,QAAiBC,MAAM,gCAAgCC,EAAQf,MAC/DgB,QAAaH,EAASI,OAC5B,MAAO,CAAEjB,KAAMe,EAAQf,KAAMkB,MAAOF,EAAKG,iBAAkBC,MAAOJ,EAAKK,eAIrEC,SADgBC,QAAQC,IAAIb,IACJc,OAAO,CAACC,EAAKC,KACvCD,EAAIC,EAAO3B,MAAQ2B,EACZD,GACR,IAEHtB,EAAckB,IAGlBM,IACD,IAGCC,IAAAC,cAACC,IAAM,KACHF,IAAAC,cAAA,OAAKE,UAAW,iCAAgC1B,EAAS,YAAc,KAClET,EAASe,IAAKG,IACX,MAAMkB,EAAa9B,EAAWY,EAAQf,OAAS,GAC/C,OACI6B,IAAAC,cAAA,OAAKE,UAAU,eAAeE,IAAKnB,EAAQf,MACvC6B,IAAAC,cAAA,OAAKE,UAAU,gBACXH,IAAAC,cAAA,QAAME,UAAU,iBACZH,IAAAC,cAACK,IAAe,CAACC,KAAMC,MAAU,IAAEJ,EAAWf,OAAS,GAE3DW,IAAAC,cAAA,QAAME,UAAU,iBACZH,IAAAC,cAACK,IAAe,CAACC,KAAME,MAAc,IAAEL,EAAWb,OAAS,IAGnES,IAAAC,cAAA,OAAKE,UAAU,mBACXH,IAAAC,cAAA,MAAIE,UAAU,iBAAiBjB,EAAQjB,OACvC+B,IAAAC,cAAA,KAAGE,UAAU,uBAAuBjB,EAAQhB,aAC5C8B,IAAAC,cAAA,OAAKE,UAAU,mBACXH,IAAAC,cAAA,KAAGS,KAAM,sBAAsBxB,EAAQf,KAAQwC,OAAO,SAASC,IAAI,sBAAsBT,UAAU,gBAC/FH,IAAAC,cAACK,IAAe,CAACC,KAAMM,MAAU,WAEpC3B,WAASd,KACN4B,IAAAC,cAAA,KAAGS,KAAMxB,EAAQd,KAAMuC,OAAO,SAASC,IAAI,sBAAsBT,UAAU,qBACvEH,IAAAC,cAACK,IAAe,CAACC,KAAMO,MAAqB,SAE9Cd,IAAAC,cAAAD,IAAAe,SAAA,e","file":"component---src-pages-projects-js-636a24b3df0426f5dc00.js","sourcesContent":["const projects = [\n    {\n        title: \"shahnawaz-pabon.github.io\",\n        description: \"This site\",\n        repo: \"shahnawaz-pabon/shahnawaz-pabon.github.io\",\n        // demo: \"https://projectone-demo.com\",\n    },\n\n    {\n        title: \"Daily Encyclopedia\",\n        description: \"A documentation of my regular learning\",\n        repo: \"shahnawaz-pabon/daily-encyclopedia\"\n    },\n    {\n        title: \"Awesome GIS\",\n        description: \"A Geographical Information System with exciting features\",\n        repo: \"shahnawaz-pabon/awesome-gis\",\n        demo: \"https://shahnawaz-pabon.github.io/awesome-gis\",\n    },\n    {\n        title: \"Minesweeper Game\",\n        description: \"A 2d grid game\",\n        repo: \"shahnawaz-pabon/minesweeper\",\n        demo: \"https://shahnawaz-pabon.github.io/minesweeper\",\n    },\n    {\n        title: \"FastAPI with MongoDB\",\n        description: \"Exemplary backend integration of MongoDB and JWT in FastAPI, following industry best practices\",\n        repo: \"shahnawaz-pabon/fastapi-mongodb-with-jwt\",\n        // demo: \"https://shahnawaz-pabon.github.io/minesweeper\",\n    },\n    {\n        title: \"FastAPI with Celery\",\n        description: \"An example project to get started celery with fastapi\",\n        repo: \"shahnawaz-pabon/celery-with-fastapi\",\n        // demo: \"https://shahnawaz-pabon.github.io/minesweeper\",\n    },\n    {\n        title: \"File Upload in Multer\",\n        description: \"Client and Server for uploading a file with multer & express\",\n        repo: \"shahnawaz-pabon/file-upload-with-multer\",\n        // demo: \"https://shahnawaz-pabon.github.io/minesweeper\",\n    }\n];\n\nexport default projects;  ","import React, { useEffect, useState, useContext } from \"react\";\nimport Layout from \"../layout\";\nimport projects from \"../data/projects\";\nimport \"../styles/project.css\";\nimport { ThemeContext } from \"../components/ThemeContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCode, faExternalLinkAlt, faStar, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Projects = () => {\n    const [githubData, setGithubData] = useState({});\n    const { isDark } = useContext(ThemeContext); // Detect if dark mode is active\n\n    useEffect(() => {\n        const fetchGithubData = async () => {\n            const promises = projects.map(async (project) => {\n                const response = await fetch(`https://api.github.com/repos/${project.repo}`);\n                const data = await response.json();\n                return { repo: project.repo, stars: data.stargazers_count, forks: data.forks_count };\n            });\n\n            const results = await Promise.all(promises);\n            const githubDataMap = results.reduce((acc, result) => {\n                acc[result.repo] = result;\n                return acc;\n            }, {});\n\n            setGithubData(githubDataMap);\n        };\n\n        fetchGithubData();\n    }, []);\n\n    return (\n        <Layout>\n            <div className={`container projects-container ${isDark ? \"dark-mode\" : \"\"}`}>\n                {projects.map((project) => {\n                    const githubInfo = githubData[project.repo] || {};\n                    return (\n                        <div className=\"project-card\" key={project.repo}>\n                            <div className=\"project-meta\">\n                                <span className=\"project-stars\">\n                                    <FontAwesomeIcon icon={faStar} /> {githubInfo.stars || 0}\n                                </span>\n                                <span className=\"project-forks\">\n                                    <FontAwesomeIcon icon={faUtensils} /> {githubInfo.forks || 0}\n                                </span>\n                            </div>\n                            <div className=\"project-content\">\n                                <h3 className=\"project-title\">{project.title}</h3>\n                                <p className=\"project-description\">{project.description}</p>\n                                <div className=\"project-buttons\">\n                                    <a href={`https://github.com/${project.repo}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\n                                        <FontAwesomeIcon icon={faCode} /> Source\n                                    </a>\n                                    {project?.demo ?\n                                        <a href={project.demo} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link demo\">\n                                            <FontAwesomeIcon icon={faExternalLinkAlt} /> Demo\n                                        </a>\n                                        : <></>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Projects;\n"],"sourceRoot":""}