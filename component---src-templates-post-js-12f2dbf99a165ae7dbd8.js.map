{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["featuredImage","profileUrl","post","data","markdownRemark","tags","frontmatter","childImageSharp","fixed","className","title","date","timeToRead","href","author","map","tag","key","to","icon","faTag","color","dangerouslySetInnerHTML","__html","html"],"mappings":"8FAAA,iHASe,sBAAe,IAExBA,EAAeC,EADbC,EADqB,EAAXC,KACEC,eAGdC,EAAOH,EAAKI,YAAYD,KAQ5B,OANAJ,EAAaC,EAAKI,YAAYL,WAAaC,EAAKI,YAAYL,WAAa,GAErEC,EAAKI,YAAYN,gBACnBA,EAAgBE,EAAKI,YAAYN,cAAcO,gBAAgBC,OAI/D,kBAAC,IAAD,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eAEZT,EAAgB,kBAAC,IAAD,CAAKQ,MAAOR,IAAoB,8BAEjD,yBAAKS,UAAU,mBACb,wBAAIA,UAAU,qBAAqBP,EAAKI,YAAYI,OACpD,yBAAKD,UAAU,aACb,2BAAOA,UAAU,cAAcP,EAAKI,YAAYK,KAAhD,SAA4DT,EAAKU,WAAjE,eAAwF,oCAAS,uBAAGC,KAAMZ,GAAaC,EAAKI,YAAYQ,WAE1I,yBAAKL,UAAU,aAEXJ,EAAKU,KAAI,SAAAC,GAAG,OACV,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAG,IAAIT,UAAU,QAC/B,kBAAC,IAAD,CAAiBU,KAAMC,IAAOC,MAAM,UAAUZ,UAAU,aACxD,0BAAMA,UAAU,OAAOO,UASnC,yBAAKM,wBAAyB,CAAEC,OAAQrB,EAAKsB,Y","file":"component---src-templates-post-js-12f2dbf99a165ae7dbd8.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from 'gatsby-image';\nimport Layout from \"../layout\";\nimport { Link } from 'gatsby';\nimport '../styles/post.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  let featuredImage, profileUrl;\n\n  let tags = post.frontmatter.tags;\n\n  profileUrl = post.frontmatter.profileUrl ? post.frontmatter.profileUrl : \"\";\n\n  if (post.frontmatter.featuredImage) {\n    featuredImage = post.frontmatter.featuredImage.childImageSharp.fixed;\n  }\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div className=\"post-header\">\n\n          {featuredImage ? <Img fixed={featuredImage} /> : <div />}\n\n          <div className=\"post-title-part\">\n            <h2 className=\"post-header-title\">{post.frontmatter.title}</h2>\n            <div className=\"post-date\">\n              <small className=\"text-muted\">{post.frontmatter.date} . ‚òïÔ∏è {post.timeToRead} min read . <b>‚Äãü§µüèª <a href={profileUrl}>{post.frontmatter.author}</a></b></small>\n            </div>\n            <div className=\"post-tags\">\n              {\n                tags.map(tag => (\n                  <Link key={tag} to=\"/\" className=\"tags\">\n                    <FontAwesomeIcon icon={faTag} color=\"#2c3e50\" className=\"tag-icon\" />\n                    <span className=\"tag\">{tag}</span>\n                  </Link>\n                ))\n              }\n            </div>\n          </div>\n\n        </div>\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      frontmatter {\n        template\n        title\n        featuredImage{\n          childImageSharp {\n            fixed(width: 100, height: 100) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        date(formatString: \"DD MMMM, YYYY\")\n        author\n        profileUrl\n        category\n        tags\n      }\n      excerpt\n      fields {\n        slug\n      }\n    }\n  }\n`"],"sourceRoot":""}