{"version":3,"sources":["webpack:///./src/components/Comments/index.js","webpack:///./src/templates/post.js","webpack:///./src/utilities/utterances.js"],"names":["Comments","_ref","commentBox","React","createElement","ref","data","post","markdownRemark","featuredImage","profileUrl","tags","frontmatter","childImageSharp","fixed","createRef","useEffect","utteranceScript","document","utteranceTheme","localStorage","getItem","async","src","setAttribute","current","appendChild","console","log","addComments","Layout","Helmet","title","config","siteTitle","className","Img","date","timeToRead","href","author","map","tag","Link","key","to","FontAwesomeIcon","icon","faTag","color","dangerouslySetInnerHTML","__html","html","id"],"mappings":"oOAEO,MAAMA,EAAWC,IAAqB,IAApB,WAAEC,GAAYD,EACrC,OAAOE,IAAAC,cAAA,OAAKC,IAAKH,K,gBCUJD,cAAe,IAAd,KAAEK,GAAML,EACtB,MAAMM,EAAOD,EAAKE,eAClB,IAAIC,EAAeC,EAEfC,EAAOJ,EAAKK,YAAYD,KAE5BD,EAAaH,EAAKK,YAAYF,WAAaH,EAAKK,YAAYF,WAAa,GAErEH,EAAKK,YAAYH,gBACnBA,EAAgBF,EAAKK,YAAYH,cAAcI,gBAAgBC,OAGjE,MAAMZ,EAAaC,IAAMY,YAMzB,OAJAC,oBAAU,MC3BL,SAAqBd,GAC1B,MAAMe,EAAkBC,SAASd,cAAc,UACzCe,EAAiBC,aAAaC,QAAQ,UACxC,YACA,aAEJJ,EAAgBK,OAAQ,EACxBL,EAAgBM,IAAM,gCACtBN,EAAgBO,aAAa,OAAQ,oCACrCP,EAAgBO,aAAa,aAAc,SAC3CP,EAAgBO,aAAa,QAAS,QACtCP,EAAgBO,aAAa,KAAM,cACnCP,EAAgBO,aAAa,QAASL,GACtCF,EAAgBO,aAAa,cAAe,aAExCtB,GAAcA,EAAWuB,QAC3BvB,EAAWuB,QAAQC,YAAYT,GAE/BU,QAAQC,IAAI,wCAAwC1B,GDUpD2B,CAAY3B,IACX,CAACA,IAGFC,IAAAC,cAAC0B,IAAM,KACL3B,IAAAC,cAAC2B,SAAM,CAACC,MAAUzB,EAAKK,YAAYoB,MAAK,MAAMC,IAAOC,YAErD/B,IAAAC,cAAA,OAAK+B,UAAU,aACbhC,IAAAC,cAAA,OAAK+B,UAAU,eACZ1B,EAAgBN,IAAAC,cAACgC,IAAG,CAACtB,MAAOL,IAAoBN,IAAAC,cAAA,YAEjDD,IAAAC,cAAA,OAAK+B,UAAU,mBACbhC,IAAAC,cAAA,MAAI+B,UAAU,qBAAqB5B,EAAKK,YAAYoB,OACpD7B,IAAAC,cAAA,OAAK+B,UAAU,aACbhC,IAAAC,cAAA,SAAO+B,UAAU,cACd5B,EAAKK,YAAYyB,KAAK,SAAO9B,EAAK+B,WAAW,cAAY,IAC1DnC,IAAAC,cAAA,SAAG,SACKD,IAAAC,cAAA,KAAGmC,KAAM7B,GAAaH,EAAKK,YAAY4B,WAInDrC,IAAAC,cAAA,OAAK+B,UAAU,aACZxB,EAAK8B,IAAKC,GACTvC,IAAAC,cAACuC,OAAI,CAACC,IAAKF,EAAKG,GAAG,IAAIV,UAAU,QAC/BhC,IAAAC,cAAC0C,IAAe,CACdC,KAAMC,IACNC,MAAM,UACNd,UAAU,aAEZhC,IAAAC,cAAA,QAAM+B,UAAU,OAAOO,QAOjCvC,IAAAC,cAAA,OAAK8C,wBAAyB,CAAEC,OAAQ5C,EAAK6C,SAG/CjD,IAAAC,cAAA,WAASiD,GAAG,WAAWlB,UAAU,sBAC/BhC,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACJ,EAAQ,CAACE,WAAYA,Q","file":"component---src-templates-post-js-d6e20aa5671591cd7ceb.js","sourcesContent":["import React from 'react'\n\nexport const Comments = ({ commentBox }) => {\n  return <div ref={commentBox} />\n}","import React, { useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport config from '../data/config';\nimport Layout from \"../layout\";\nimport { Link } from \"gatsby\";\nimport \"../styles/post.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\";\nimport { Comments } from \"../components/Comments\";\nimport { addComments } from \"../utilities/utterances\";\nimport { Helmet } from 'react-helmet';\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  let featuredImage, profileUrl;\n\n  let tags = post.frontmatter.tags;\n\n  profileUrl = post.frontmatter.profileUrl ? post.frontmatter.profileUrl : \"\";\n\n  if (post.frontmatter.featuredImage) {\n    featuredImage = post.frontmatter.featuredImage.childImageSharp.fixed;\n  }\n\n  const commentBox = React.createRef();\n\n  useEffect(() => {\n    addComments(commentBox);\n  }, [commentBox]);\n\n  return (\n    <Layout>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      \n      <div className=\"container\">\n        <div className=\"post-header\">\n          {featuredImage ? <Img fixed={featuredImage} /> : <div />}\n\n          <div className=\"post-title-part\">\n            <h2 className=\"post-header-title\">{post.frontmatter.title}</h2>\n            <div className=\"post-date\">\n              <small className=\"text-muted\">\n                {post.frontmatter.date} . ‚òïÔ∏è {post.timeToRead} min read .{\" \"}\n                <b>\n                  ‚Äãü§µüèª <a href={profileUrl}>{post.frontmatter.author}</a>\n                </b>\n              </small>\n            </div>\n            <div className=\"post-tags\">\n              {tags.map((tag) => (\n                <Link key={tag} to=\"/\" className=\"tags\">\n                  <FontAwesomeIcon\n                    icon={faTag}\n                    color=\"#2c3e50\"\n                    className=\"tag-icon\"\n                  />\n                  <span className=\"tag\">{tag}</span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n\n      <section id=\"comments\" className=\"comments container\">\n        <h2>Comments</h2>\n        <Comments commentBox={commentBox} />\n      </section>\n      \n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      frontmatter {\n        template\n        title\n        featuredImage {\n          childImageSharp {\n            fixed(width: 100, height: 100) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        date(formatString: \"DD MMMM, YYYY\")\n        author\n        profileUrl\n        category\n        tags\n      }\n      excerpt\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","export function addComments(commentBox) {\n  const utteranceScript = document.createElement(\"script\");\n  const utteranceTheme = localStorage.getItem(\"isDark\")\n    ? \"dark-blue\"\n    : \"boxy-light\";\n\n  utteranceScript.async = true;\n  utteranceScript.src = \"https://utteranc.es/client.js\";\n  utteranceScript.setAttribute(\"repo\", \"shahnawaz-pabon/my-site-comments\");\n  utteranceScript.setAttribute(\"issue-term\", \"title\");\n  utteranceScript.setAttribute(\"label\", \"‚ú®üí¨‚ú®\");\n  utteranceScript.setAttribute(\"id\", \"utterances\");\n  utteranceScript.setAttribute(\"theme\", utteranceTheme);\n  utteranceScript.setAttribute(\"crossorigin\", \"anonymous\");\n\n  if (commentBox && commentBox.current) {\n    commentBox.current.appendChild(utteranceScript);\n  } else {\n    console.log(`Error adding utterances comments on: ${commentBox}`);\n  }\n}\n"],"sourceRoot":""}