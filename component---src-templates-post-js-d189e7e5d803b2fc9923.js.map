{"version":3,"sources":["webpack:///./src/components/Comments/index.js","webpack:///./src/templates/post.js","webpack:///./src/utilities/utterances.js"],"names":["Comments","commentBox","ref","featuredImage","profileUrl","post","data","markdownRemark","tags","frontmatter","childImageSharp","fixed","React","createRef","useEffect","utteranceScript","document","createElement","utteranceTheme","localStorage","getItem","async","src","setAttribute","current","appendChild","console","log","addComments","className","title","date","timeToRead","href","author","map","tag","key","to","icon","faTag","color","dangerouslySetInnerHTML","__html","html","id"],"mappings":"+MAEaA,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OAAO,yBAAKC,IAAKD,KCQJ,sBAAe,IAExBE,EAAeC,EADbC,EADqB,EAAXC,KACEC,eAGdC,EAAOH,EAAKI,YAAYD,KAE5BJ,EAAaC,EAAKI,YAAYL,WAAaC,EAAKI,YAAYL,WAAa,GAErEC,EAAKI,YAAYN,gBACnBA,EAAgBE,EAAKI,YAAYN,cAAcO,gBAAgBC,OAGjE,IAAMV,EAAaW,IAAMC,YAMzB,OAJAC,qBAAU,YCzBL,SAAqBb,GAC1B,IAAMc,EAAkBC,SAASC,cAAc,UACzCC,EAAiBC,aAAaC,QAAQ,UACxC,YACA,aAEJL,EAAgBM,OAAQ,EACxBN,EAAgBO,IAAM,gCACtBP,EAAgBQ,aAAa,OAAQ,oCACrCR,EAAgBQ,aAAa,aAAc,YAC3CR,EAAgBQ,aAAa,QAAS,QACtCR,EAAgBQ,aAAa,KAAM,cACnCR,EAAgBQ,aAAa,QAASL,GACtCH,EAAgBQ,aAAa,cAAe,aAExCtB,GAAcA,EAAWuB,QAC3BvB,EAAWuB,QAAQC,YAAYV,GAE/BW,QAAQC,IAAR,wCAAoD1B,GDQpD2B,CAAY3B,KACX,CAACA,IAGF,kBAAC,IAAD,KACE,yBAAK4B,UAAU,aACb,yBAAKA,UAAU,eACZ1B,EAAgB,kBAAC,IAAD,CAAKQ,MAAOR,IAAoB,8BAEjD,yBAAK0B,UAAU,mBACb,wBAAIA,UAAU,qBAAqBxB,EAAKI,YAAYqB,OACpD,yBAAKD,UAAU,aACb,2BAAOA,UAAU,cACdxB,EAAKI,YAAYsB,KADpB,SACgC1B,EAAK2B,WADrC,cAC4D,IAC1D,oCACQ,uBAAGC,KAAM7B,GAAaC,EAAKI,YAAYyB,WAInD,yBAAKL,UAAU,aACZrB,EAAK2B,KAAI,SAACC,GAAD,OACR,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAG,IAAIT,UAAU,QAC/B,kBAAC,IAAD,CACEU,KAAMC,IACNC,MAAM,UACNZ,UAAU,aAEZ,0BAAMA,UAAU,OAAOO,UAOjC,yBAAKM,wBAAyB,CAAEC,OAAQtC,EAAKuC,SAG/C,6BAASC,GAAG,WAAWhB,UAAU,sBAC/B,wCACA,kBAAC,EAAD,CAAU5B,WAAYA,Q","file":"component---src-templates-post-js-d189e7e5d803b2fc9923.js","sourcesContent":["import React from 'react'\n\nexport const Comments = ({ commentBox }) => {\n  return <div ref={commentBox} />\n}","import React, { useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Layout from \"../layout\";\nimport { Link } from \"gatsby\";\nimport \"../styles/post.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\";\nimport { Comments } from \"../components/Comments\";\nimport { addComments } from \"../utilities/utterances\";\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  let featuredImage, profileUrl;\n\n  let tags = post.frontmatter.tags;\n\n  profileUrl = post.frontmatter.profileUrl ? post.frontmatter.profileUrl : \"\";\n\n  if (post.frontmatter.featuredImage) {\n    featuredImage = post.frontmatter.featuredImage.childImageSharp.fixed;\n  }\n\n  const commentBox = React.createRef();\n\n  useEffect(() => {\n    addComments(commentBox);\n  }, [commentBox]);\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div className=\"post-header\">\n          {featuredImage ? <Img fixed={featuredImage} /> : <div />}\n\n          <div className=\"post-title-part\">\n            <h2 className=\"post-header-title\">{post.frontmatter.title}</h2>\n            <div className=\"post-date\">\n              <small className=\"text-muted\">\n                {post.frontmatter.date} . ‚òïÔ∏è {post.timeToRead} min read .{\" \"}\n                <b>\n                  ‚Äãü§µüèª <a href={profileUrl}>{post.frontmatter.author}</a>\n                </b>\n              </small>\n            </div>\n            <div className=\"post-tags\">\n              {tags.map((tag) => (\n                <Link key={tag} to=\"/\" className=\"tags\">\n                  <FontAwesomeIcon\n                    icon={faTag}\n                    color=\"#2c3e50\"\n                    className=\"tag-icon\"\n                  />\n                  <span className=\"tag\">{tag}</span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n\n      <section id=\"comments\" className=\"comments container\">\n        <h2>Comments</h2>\n        <Comments commentBox={commentBox} />\n      </section>\n      \n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      frontmatter {\n        template\n        title\n        featuredImage {\n          childImageSharp {\n            fixed(width: 100, height: 100) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        date(formatString: \"DD MMMM, YYYY\")\n        author\n        profileUrl\n        category\n        tags\n      }\n      excerpt\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","export function addComments(commentBox) {\n  const utteranceScript = document.createElement(\"script\");\n  const utteranceTheme = localStorage.getItem(\"isDark\")\n    ? \"dark-blue\"\n    : \"boxy-light\";\n\n  utteranceScript.async = true;\n  utteranceScript.src = \"https://utteranc.es/client.js\";\n  utteranceScript.setAttribute(\"repo\", \"shahnawaz-pabon/my-site-comments\");\n  utteranceScript.setAttribute(\"issue-term\", \"pathname\");\n  utteranceScript.setAttribute(\"label\", \"‚ú®üí¨‚ú®\");\n  utteranceScript.setAttribute(\"id\", \"utterances\");\n  utteranceScript.setAttribute(\"theme\", utteranceTheme);\n  utteranceScript.setAttribute(\"crossorigin\", \"anonymous\");\n\n  if (commentBox && commentBox.current) {\n    commentBox.current.appendChild(utteranceScript);\n  } else {\n    console.log(`Error adding utterances comments on: ${commentBox}`);\n  }\n}\n"],"sourceRoot":""}